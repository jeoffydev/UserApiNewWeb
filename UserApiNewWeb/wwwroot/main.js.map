{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/story.ts","./src/app/user.ts","./src/app/age-validator.directive.ts","./src/environments/environment.ts","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./src/app/can-activate-guard.service.ts","./src/app/jwt-interceptor.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/register-view-model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/login-view-model.ts","./src/app/app.module.ts","./src/app/login.service.ts","./src/app/story.service.ts","./src/app/register.service.ts","./src/app/authorization-interceptor.service.ts","./src/app/main-app-component.service.ts","./src/app/stories/stories.component.ts","./src/app/stories/stories.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { RegisterService } from './../register.service';\r\nimport { RegisterViewModel } from './../register-view-model';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router'; \r\nimport { LoginService } from '../login.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { User } from '../user';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  rvm: RegisterViewModel = new RegisterViewModel(); \r\n  thisMessage: any;\r\n  errorArray: any = [];\r\n  loginError: string = \"\";\r\n  userLog : User = new User();\r\n\r\n  @ViewChild(\"newForm\") newForm: NgForm;\r\n  constructor(private registerService: RegisterService, private loginservice: LoginService, private router: Router) { }\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    this.thisMessage = false; \r\n    if(this.loginservice.checkLogin() != null){ \r\n      this.router.navigateByUrl(\"/my-stories\");\r\n    }\r\n\r\n\r\n  }\r\n\r\n  makeLowerCase(val){\r\n     this.rvm.UserName = val.toLowerCase().replace(/[$&%#@!*^`~,.<>;':\"\\/\\[\\]\\|{}()=_+-]/g,'');\r\n  }\r\n\r\n  onRegisterClick(event){ \r\n    return this.registerService.Register(this.rvm).subscribe(\r\n    \r\n      (response) => { \r\n        this.loginError = \"\";\r\n        this.rvm.FullName =null;\r\n        this.rvm.UserName = null;\r\n        this.rvm.Password = null;\r\n        this.rvm.ConfirmPassword = null;\r\n        this.thisMessage = \"Thank you. Please login now\";\r\n        \r\n      },\r\n       (error) => {\r\n         console.log(error);\r\n\r\n        var errorFinal = \"\";\r\n        this.errorArray = [];\r\n        \r\n        if(error.error.error){\r\n          errorFinal += error.error.error;\r\n          this.errorArray.push(error.error.error);\r\n        }\r\n        if(error.error.FullName){\r\n          errorFinal += error.error.FullName;\r\n          this.errorArray.push(error.error.FullName);\r\n        }\r\n        if(error.error.UserName){\r\n          errorFinal += error.error.UserName;\r\n          this.errorArray.push(error.error.UserName);\r\n        }\r\n        if(error.error.Password){\r\n          errorFinal += error.error.Password;\r\n          this.errorArray.push(error.error.Password);\r\n        }\r\n        if(error.error.ConfirmPassword){\r\n          errorFinal += error.error.ConfirmPassword;\r\n          this.errorArray.push(error.error.ConfirmPassword);\r\n        }\r\n        console.log(this.errorArray);\r\n        this.loginError = this.errorArray;\r\n      },\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n"," \r\n\r\n<div class=\"container \"> \r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">&nbsp;</div>\r\n        <div class=\"col-md-6 padding-bottom\">\r\n            <div class=\"alert alert-success\" *ngIf=\"thisMessage\"> <a class=\"text-dark\" routerLink=\"/login\" > {{thisMessage}} </a></div>\r\n            <div class=\"alert alert-danger\" *ngIf=\"loginError\">\r\n                    <span class=\"text-danger\"   *ngFor =\"let er of loginError\">{{er}} <br /></span>\r\n            </div>\r\n            \r\n \r\n                <form class=\"padding background-transparent margin-bottom\" #newForm=\"ngForm\" novalidate=\"novalidate\" appAgeValidator *ngIf=\"!thisMessage\">\r\n                        <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Full Name</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"rvm.FullName\" required   name=\"FullName\" > \r\n                              </div>\r\n                        <div class=\"form-group\">\r\n                          <label for=\"exampleInputEmail1\">Username</label>\r\n                          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"rvm.UserName\" required id=\"username\"  name=\"UserName\" (change)=\"makeLowerCase(rvm.UserName)\"   (keydown.space)=\"$event.preventDefault()\" > \r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\">Age</label> \r\n                            <select class=\"form-control\" [(ngModel)]=\"rvm.Age\" required=\"required\"   name=\"Age\" #newAge=\"ngModel\"  > \r\n                                    <option value=\"3\" >Less than 4 years old  </option>\r\n                                    <option value=\"5\" >Older than 4 years old  </option>\r\n                            </select>\r\n                            <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && newForm.errors?.kidAge\">Sorry, you cannot register if you are younger than 4 years old</span>\r\n                          </div> \r\n                        <div class=\"form-group\">\r\n                          <label for=\"exampleInputPassword1\">Password</label>\r\n                          <input type=\"password\" class=\"form-control\" [(ngModel)]=\"rvm.Password\" required   name =\"Password\" >\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputPassword1\">Confirm Password</label>\r\n                            <input type=\"password\" class=\"form-control\" required    [(ngModel)]=\"rvm.ConfirmPassword\" name =\"ConfirmPassword\" >\r\n                          </div> \r\n                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onRegisterClick($event)\" [disabled]=\"!rvm.Age || rvm.Age < 4\">Submit</button>\r\n               </form>\r\n\r\n        </div>\r\n        <div class=\"col-md-3\">&nbsp;</div>\r\n    </div> \r\n</div>\r\n","export class Story {\r\n    Id: number;\r\n    MyStory: any;\r\n    GoogleFont: any;\r\n    GoogleFontsId: number;\r\n    Title: string;\r\n    BackgroundColour: string;\r\n    UserId: string; \r\n    DateCreated: any;\r\n    ApplicationUser: any;\r\n    Loves: any[];\r\n    lovedDone : boolean;\r\n}\r\n","export class User {\r\n    usernameLog : string;\r\n    useridLog : string;\r\n}\r\n\r\n","import { Directive } from '@angular/core';\r\nimport { AsyncValidator } from '@angular/forms';\r\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appAgeValidator]',\r\n  providers: [ { provide: NG_VALIDATORS, useExisting: AgeValidatorDirective, multi: true }]\r\n})\r\nexport class AgeValidatorDirective implements  Validator {\r\n\r\n  constructor() { }\r\n\r\n  validate(control: AbstractControl) : ValidationErrors | null\r\n  {\r\n    let isValid = true;\r\n    if (control.value.Age < 4)\r\n    {\r\n      isValid = false; //indicates invalid\r\n    } \r\n    if (isValid == true)\r\n    {\r\n      return null; //valid\r\n    }\r\n    else\r\n    {\r\n      return { kidAge: { valid: false }}; //invalid\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component,   OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit(): void {\n  }\n\n \n\n}\n"," \n\n\n\n<div class=\"container\">\n    <div class=\"row\"  >\n            <div class=\"col-md-4\">&nbsp;</div>\n            <div class=\"col-md-8 background-transparent\">\n                <h1 class=\"intro margin-top\">About Us</h1>\n                     <p>Kiwi Kids Stories is a non  profit organization. The purpose of this app is for those children will learn on how to create their own stories or imagination with parents guidance.  </p>\n                     <p>The developer, Jeoffy Hipolito is using this app to check his children's ability and for them to enhance their creativity of doing such thing.</p>\n                     <p>Parents can teach their kids on how to create sentence, paragraph and the basic punctuation.</p>\n                     \n                     <h4>Kids can:</h4>\n                     <ul>\n                         <li>Register and login</li>\n                         <li>Create their story</li>\n                         <li>Update their story</li> \n                         <li>Select font style for each of their story</li>\n                         <li>View other kids stories</li>\n                         <li>Click Love icon to each story they loved.</li>\n                         <li>Create a background colour (soon...)</li>\n                         <li>Delete their story (soon)</li>\n                     </ul>\n                     \n            </div>\n           \n     </div>\n        \n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateGuardService {\r\n\r\n  constructor(private loginservice : LoginService, private router : Router) { }\r\n\r\n canActivate(router:ActivatedRouteSnapshot) : boolean{ \r\n    if(this.loginservice.isAuthenticated()){ \r\n      return true;\r\n    }else{\r\n      this.router.navigate([\"login\"]);\r\n      return false;\r\n    }\r\n  } \r\n \r\n\r\n \r\n\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n \r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptorService  implements HttpInterceptor{\r\n\r\n  constructor() { \r\n\r\n  }\r\n  //Also add !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n  //run - npm install @auth0/angular-jwt --save\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\r\n  {\r\n\r\n    var currentUser = {token : \"\"}; \r\n    if(localStorage.currentUser != null){\r\n      currentUser = JSON.parse(localStorage.currentUser); \r\n    }\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: \"Bearer \" + currentUser.token\r\n      }\r\n    })\r\n\r\n    return next.handle(request);\r\n\r\n\r\n  } \r\n\r\n}\r\n","import { User } from './../user';\r\nimport { StoryService } from './../story.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Story } from '../story';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  AllStories : Story[];\r\n  userLog : User = new User();\r\n  p: number = 1; \r\n  searchStory: string;\r\n  storyLoved : any[];\r\n  constructor(private storiesservice : StoryService, private loginservice : LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.loginservice.checkLogin() != null){ \r\n      var user = this.loginservice.checkLogin();  \r\n      this.userLog.usernameLog = user.username;\r\n      this.userLog.useridLog = user.userid;  \r\n    }\r\n\r\n    this.getStoriesService();\r\n\r\n  }\r\n\r\n  LoveThisStory(event, userid, storyid){\r\n    console.log(userid + \"/\" + storyid);\r\n    this.storiesservice.LoveThisStory(userid, storyid).subscribe(\r\n      (response : string) => {\r\n       \r\n        if(response['message'] == \"success\"){ \r\n          this.getStoriesService();\r\n        }\r\n        \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    \r\n  }\r\n  UnLoveThisStory(event, userid, storyid){\r\n    \r\n    this.storiesservice.UnLoveThisStory(userid, storyid).subscribe(\r\n      (response : string) => {\r\n       \r\n        if(response['message'] == \"success\"){ \r\n          this.getStoriesService();\r\n        }\r\n        \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  GetAllLoved(model){\r\n    this.storyLoved = model;\r\n  }\r\n\r\n  getStoriesService(){\r\n    this.storiesservice.getAllStories().subscribe(\r\n      (response : Story[]) => {\r\n         //\r\n          this.AllStories  = response;\r\n          if (response)\r\n          {\r\n            \r\n             \r\n            if(this.userLog.useridLog != null && this.userLog.usernameLog != null){\r\n              for(let i = 0; i < response.length; i++){\r\n                let loveArray = response[i]['loves'];\r\n                //console.log(loveArray);\r\n                for(let ii = 0; ii < loveArray.length; ii++){\r\n                  console.log(loveArray[ii]['userId'])\r\n                  if(loveArray[ii]['userId'] == this.userLog.useridLog){\r\n                      response[i]['lovedDone'] = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n\r\n          \r\n          \r\n      },\r\n      (error) => { \r\n        console.log(error);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">&nbsp;</div>\r\n        <div class=\"col-md-7 text-light text-left\">\r\n            <h1 class=\"intro\">Hey Kids! <br />tell us your day today! :)</h1>\r\n        </div>\r\n    </div>\r\n</div> \r\n\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\" *ngIf=\"AllStories\">\r\n            <div class=\"col-md-5\">&nbsp;</div>\r\n            <div class=\"col-md-7\">\r\n                    <p *ngIf=\"userLog.usernameLog\" ><input type=\"text\" [(ngModel)]=\"searchStory\" class=\"form-control searchform\" placeholder=\"Search all stories\"></p>\r\n                    <pagination-controls   (pageChange)=\"p = $event\"></pagination-controls>  \r\n                    <div class=\"alert alert-light background-transparent nobroder\" role=\"alert\"  *ngFor=\"let story of AllStories | filter:searchStory | paginate: { itemsPerPage: 12, currentPage: p }\" >\r\n                           \r\n                            <svg style=\"display:none\">\r\n                                <style>\r\n                                    @import url('{{story.googleFont.importUrl}}');\r\n                                </style>\r\n                            </svg>\r\n                              \r\n                            <div class=\"thisgooglefont\" style='{{story.googleFont.importName}} ' > \r\n                                \r\n                                <h3  >{{story.title}}</h3>\r\n                                <div   *ngIf=\"!userLog.usernameLog\" [innerHTML]=\"story.myStory.slice(0, 85) + '...'\"></div>\r\n                                <p  ><a  routerLink=\"/login\" *ngIf=\"!userLog.usernameLog\">Read more</a></p>\r\n                                <div  *ngIf=\"userLog.usernameLog\" [innerHTML]=\"story.myStory\"></div>\r\n                            </div>\r\n                           \r\n                            <p><small>Author: {{story.applicationUser.fullName}}  <br /> Date Created: {{story.dateCreated | date:'medium'}} </small></p>\r\n                            \r\n                            <p class=\"loved\" *ngIf=\"userLog.usernameLog\" >\r\n                                <span class=\"loveme\">\r\n                                <i class=\"fa fa-heart\" *ngIf=\"!story.lovedDone\" (click)=\"LoveThisStory($event, userLog.useridLog, story.id)\" ></i> \r\n                                 <i class=\"fa fa-heart active\" *ngIf=\"story.lovedDone\" (click)=\"UnLoveThisStory($event, userLog.useridLog, story.id)\"></i>\r\n                                </span>\r\n                                \r\n                                <small *ngIf=\"story.loves.length > 0\" (click)=\"GetAllLoved(story.loves)\" data-toggle=\"modal\" data-target=\"#lovedModal\">{{story.loves.length}} loved this</small>\r\n                            </p>\r\n                    </div>  \r\n                    <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>  \r\n    \r\n            </div>\r\n           \r\n     </div>\r\n        \r\n</div>\r\n    \r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"lovedModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"lovedModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        \r\n        <div class=\"modal-body\">\r\n           <small>The following kids loved this story:</small>\r\n            <ul class=\"list-loved\">\r\n                <li *ngFor=\"let sl of storyLoved\"><i class=\"fa fa-heart text-danger\"></i> {{sl.applicationUser.userName}}</li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","export class RegisterViewModel {\r\n\r\n    FullName: string;\r\n    UserName: string;\r\n    Password: string;\r\n    ConfirmPassword: string;\r\n    Age: number;\r\n\r\n}\r\n","import { User } from './user';\r\nimport { MainAppComponentService } from './main-app-component.service';\r\nimport { Component } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'user-api'; \r\n  userLog : User = new User();\r\n  searchStory: string;\r\n  /**\r\n   *\r\n   */\r\n \r\n \r\n  constructor(public loginservice: LoginService, public router : Router, private titles: Title, private appservices : MainAppComponentService) {\r\n   \r\n    this.titles.setTitle('Kiwi Kids Stories'); \r\n    \r\n     \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n      \r\n\r\n      if(this.loginservice.checkLogin() != null){ \r\n          var user = this.loginservice.checkLogin();  \r\n          this.userLog.usernameLog = user.username;\r\n          this.userLog.useridLog = user.userid;  \r\n      }\r\n\r\n   }\r\n   \r\n\r\n    //check if loggedin\r\n  \r\n\r\n \r\n}\r\n"," \r\n \r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand logo\"  routerLink=\"/\">Kiwi Kids Stories</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li [routerLinkActive]=\"'is-active'\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-item \">\r\n        <a class=\"nav-link\" routerLink=\"/\">Home </a>\r\n      </li> \r\n      <li [routerLinkActive]=\"'is-active'\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/about-us\"  >About us</a>\r\n      </li>\r\n      <li [routerLinkActive]=\"'is-active'\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/login\" *ngIf=\"!userLog.usernameLog\">Login</a>\r\n      </li>  \r\n      <li [routerLinkActive]=\"'is-active'\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/register\" *ngIf=\"!userLog.usernameLog\" >Register</a>\r\n      </li> \r\n      <li [routerLinkActive]=\"'is-active'\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/my-stories\" *ngIf=\"userLog.usernameLog\">My Stories</a>\r\n      </li>\r\n     \r\n     \r\n       \r\n    </ul> \r\n     \r\n    <span class=\"text-light form-inline my-2 my-lg-0\" *ngIf=\"userLog.usernameLog\">\r\n       <span>Hi cutie {{userLog.usernameLog}}! </span> &nbsp; |  &nbsp;  <a class=\"text-light\"  href=\"#\" (click)=\"loginservice.Logout()\" *ngIf=\"userLog.usernameLog\"> Logout </a>\r\n    </span>\r\n  </div>\r\n</nav>\r\n<!--<h2 *ngIf=\"loginservice.thisUsername\">{{loginservice.thisUsername}} / >{{loginservice.thisUsernameId}}</h2>-->\r\n\r\n<div class=\"body-wrapper\" [ngClass]=\"router.url === '/about-us'? 'about' : '' || router.url === '/my-stories'? 'stories': ''  || router.url === '/login'? 'login': '' || router.url === '/register'? 'register': ''\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","export class LoginViewModel { \r\n    UserName: string;\r\n    Password: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { StoriesComponent } from './stories/stories.component';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { JwtInterceptorService } from './jwt-interceptor.service';\r\nimport { AuthorizationInterceptorService } from './authorization-interceptor.service';\r\nimport {JwtModule} from '@auth0/angular-jwt';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { AgeValidatorDirective } from './age-validator.directive';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor'; \r\nimport {NgxPaginationModule} from 'ngx-pagination'; \r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { AboutUsComponent } from './about-us/about-us.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    StoriesComponent,\r\n    HomepageComponent,\r\n    AgeValidatorDirective,\r\n    AboutUsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule, \r\n    HttpClientModule,\r\n    FormsModule, \r\n    AngularEditorModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    JwtModule.forRoot(\r\n      { \r\n        config: {\r\n          tokenGetter : () => { \r\n            return (localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")).token : null);\r\n          } \r\n        }\r\n      }\r\n    )\r\n    \r\n  ],\r\n  exports: [ AgeValidatorDirective ],\r\n  providers: [\r\n    {\r\n      provide : HTTP_INTERCEPTORS, //Add here multiple interceptors\r\n      useClass : JwtInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide : HTTP_INTERCEPTORS, //Add here multiple interceptors\r\n      useClass : AuthorizationInterceptorService,\r\n      multi: true\r\n    }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { User } from './user';\r\nimport { LoginViewModel } from './login-view-model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  thisApiUrl: any = '';\r\n  thisUsername : string;\r\n  thisUsernameId : string;\r\n  private httpclient: HttpClient; \r\n  userLog : User = new User();\r\n  \r\n\r\n  constructor(private httpbackend : HttpBackend, private router: Router, private jwthelperservice: JwtHelperService) { \r\n\r\n \r\n  }\r\n\r\n  public Login(logs: LoginViewModel): Observable<any>{ \r\n\r\n    this.httpclient = new HttpClient(this.httpbackend);\r\n    return this.httpclient.post<any>(this.thisApiUrl + \"/api/login\", logs)\r\n\r\n    /*\r\n    .pipe(map(user => {  \r\n\r\n      if(user.id != null){\r\n        this.thisUsername = user.userName;\r\n        // For  Angular JWT storesession Users\r\n        sessionStorage.currentUser = JSON.stringify(user);\r\n        console.log(user);\r\n        console.log(\"Pasok\");\r\n      }else{\r\n        console.log(\"Failed\");\r\n        console.log(user);\r\n        return user;\r\n           \r\n      } */\r\n\r\n      .pipe(map(response => {\r\n        \r\n        if (response)\r\n        {\r\n         this.userLog.usernameLog  = response.userName;\r\n         this.userLog.useridLog = response.id; \r\n          localStorage.currentUser = JSON.stringify(response); \r\n        }\r\n        return response; \r\n        \r\n    }));\r\n  }\r\n\r\n  public checkLogin(): any{ \r\n    var userLogged = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")) : null;  \r\n    if(userLogged != null){  \r\n      var arrayLogged = {\r\n        \"username\": userLogged.userName,\r\n        \"userid\" : userLogged.id\r\n      } \r\n      return arrayLogged;\r\n    }else{\r\n      return null;  \r\n    }\r\n     \r\n  }\r\n\r\n  public Logout(){\r\n    this.thisUsername = null;\r\n    localStorage.removeItem(\"currentUser\");\r\n    //this.router.navigateByUrl(\"/login\");  \r\n    window.location.href = \"/\"\r\n\r\n  }\r\n\r\n  public isAuthenticated() : boolean{\r\n     var token = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")).token : null; \r\n     if(this.jwthelperservice.isTokenExpired(token)){ \r\n       return false;\r\n     }else{  \r\n       return true;\r\n     }\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Story } from './story';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoryService {\r\n\r\n  thisApiUrl: any = '';\r\n \r\n\r\n  constructor(private httpclient: HttpClient) { }\r\n\r\n   getAllStories() :Observable<Story[]>{\r\n     \r\n    /* USE INTERCEPTORS INSTEAD */\r\n     //JWT For Angular\r\n     /*var currentUser = {token : \"\"};\r\n      var headers = new HttpHeaders();\r\n      headers = headers.set(\"Authorization\", \"Bearer \");\r\n      if(sessionStorage.currentUser != null){\r\n        currentUser = JSON.parse(sessionStorage.currentUser);\r\n        headers = headers.set(\"Authorization\", \"Bearer \" + currentUser.token);\r\n      }*/\r\n        //JWT For Angular\r\n\r\n      return this.httpclient.get<Story[]>(this.thisApiUrl + \"/api/stories\", {  responseType : \"json\"});\r\n      \r\n      \r\n   }\r\n\r\n   getMyStories(userid : any) :Observable<Story[]>{ \r\n      return this.httpclient.get<Story[]>(this.thisApiUrl + \"/api/stories/\" + userid, {  responseType : \"json\"});\r\n   }\r\n\r\n  editMyStory(id : number) :Observable<Story>{ \r\n    return this.httpclient.get<Story>(this.thisApiUrl + \"/api/editstory/\" + id, {  responseType : \"json\"});\r\n  }\r\n\r\n  updateThisStory(story: Story) : Observable<any>{\r\n    return this.httpclient.post<any>(this.thisApiUrl + \"/api/editstory\", story, {  responseType : \"json\"});\r\n  }\r\n\r\n   writeMyStory(story: Story) : Observable<any>{\r\n      return this.httpclient.post<any>(this.thisApiUrl + \"/api/stories\", story, {  responseType : \"json\"});\r\n   }\r\n\r\n   getGoogleFonts() :Observable<any>{ \r\n    return this.httpclient.get<any>(this.thisApiUrl + \"/api/googlefonts\",  {  responseType : \"json\"});\r\n   }\r\n\r\n   LoveThisStory(userid : any, storyid: number) :Observable<string>{ \r\n    return this.httpclient.get<string>(this.thisApiUrl + \"/api/love/\" + userid + \"/\" + storyid, {  responseType : \"json\"});\r\n  }\r\n\r\n  UnLoveThisStory(userid : any, storyid: number) :Observable<string>{ \r\n    return this.httpclient.get<string>(this.thisApiUrl + \"/api/lovedelete/\" + userid + \"/\" + storyid, {  responseType : \"json\"});\r\n  }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core'; \r\nimport { RegisterViewModel } from './register-view-model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  thisApiUrl: any = '';\r\n\r\n  constructor(private httpclient: HttpClient) { \r\n   \r\n  }\r\n\r\n  public Register(rvm: RegisterViewModel): Observable<any>{\r\n    console.log(rvm);\r\n    return this.httpclient.post<any>(this.thisApiUrl + \"/api/register\", rvm, { responseType: \"json\" })\r\n     \r\n  }\r\n\r\n  \r\n}\r\n"," \r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationInterceptorService implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  //Also add !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n  //run - npm install @auth0/angular-jwt --save\r\n\r\n  \r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\r\n  {\r\n\r\n    return next.handle(request).pipe(tap(\r\n\r\n          (event: HttpEvent<any>) =>\r\n          {\r\n            if (event instanceof HttpResponse)\r\n            {\r\n              console.log(\"You're in!\");\r\n            }\r\n          },\r\n\r\n          (error: any) =>\r\n          {\r\n            if (error instanceof HttpErrorResponse)\r\n            {\r\n              if (error.status == 401)\r\n              {\r\n                console.log(error);\r\n                alert(\"401 UnAuthorized\");\r\n              }\r\n            }\r\n          }\r\n\r\n      ));\r\n       \r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MainAppComponentService {\r\n  showEditor : boolean;\r\n  thisApiUrl: any = '';\r\n\r\n  constructor(private router:Router, private httpclient: HttpClient) { \r\n    this.showEditor = false;\r\n  }\r\n\r\n\r\n  getAuthenticatePages(): Observable<boolean>{\r\n    var userName = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")).userName : null;\r\n    console.log(userName);\r\n    return this.httpclient.get<boolean>(this.thisApiUrl + \"/api/checkusername/\" + userName );\r\n  }\r\n  \r\n \r\n   \r\n  toggleEditor(tr){\r\n    if(tr == true){\r\n      this.showEditor = false;\r\n      return false;\r\n    }\r\n    if(tr == false){\r\n      this.showEditor = true;\r\n      return true;\r\n    }\r\n    \r\n  }\r\n}\r\n","import { User } from './../user';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {  Router } from '@angular/router';\r\nimport { Story } from '../story';\r\nimport { StoryService } from '../story.service';\r\nimport { LoginService } from '../login.service'; \r\n \r\n\r\n@Component({\r\n  selector: 'app-stories',\r\n  templateUrl: './stories.component.html',\r\n  styleUrls: ['./stories.component.css']\r\n})\r\nexport class StoriesComponent implements OnInit {\r\n\r\n  stories: Story[];\r\n  myStories: Story[];\r\n  story: Story = new Story();\r\n  showEditor : boolean = false;\r\n  htmlView: any;\r\n  errorArray: any = [];\r\n  loginError: string = \"\";\r\n  thisUsername : string;\r\n  thisUsernameId : string;\r\n  userLog : User = new User();\r\n  p: number = 1;\r\n  searchStory: string;\r\n  googlefontSelect: any = [];\r\n  fontFamily: string = null;\r\n  fontEmbed: string  = null;\r\n  editForm : Story;\r\n\r\n  //TExt editor \r\n\r\n  constructor(private storyservice : StoryService, private route : Router, private loginservice : LoginService ) { }\r\n\r\n  ngOnInit(): void {\r\n   /*  this.storyservice.getAllStories().subscribe(\r\n      (response : Story[]) => {\r\n          console.log(response);\r\n           this.stories = response;\r\n      } \r\n    ); */ \r\n\r\n    if(this.loginservice.checkLogin() != null){ \r\n      var user = this.loginservice.checkLogin();  \r\n      this.userLog.usernameLog = user.username;\r\n      this.userLog.useridLog = user.userid;  \r\n    }\r\n    \r\n\r\n    //Get my stories\r\n    this.story.UserId = this.userLog.useridLog;\r\n    this.getMyStoriesService(this.userLog.useridLog);\r\n    this.showEditor = false;\r\n    this.htmlView = null;\r\n\r\n    //Text editor \r\n    \r\n    //GoogleFonts\r\n    this.getGoogleFontService();\r\n    \r\n    \r\n    //console.log(localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")).token : null);\r\n  }\r\n\r\n \r\n \r\n\r\n  toggleEditor(){\r\n    this.showEditor = !this.showEditor;\r\n    console.log(this.showEditor);\r\n  }\r\n\r\n  getGoogleFontService(){\r\n    this.storyservice.getGoogleFonts().subscribe(\r\n      (response : any) => {\r\n        //console.log(\"Google fonts\");\r\n        this.story.GoogleFontsId = 0;\r\n        this.googlefontSelect = response;\r\n        \r\n         \r\n      },\r\n      (error) => { \r\n        console.log(error);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  getFont(id){\r\n    //console.log(id);\r\n    //console.log(this.googlefontSelect);\r\n    for(let i = 0; i < this.googlefontSelect.length; i++){ \r\n      if(id == this.googlefontSelect[i].id){\r\n       //console.log(this.googlefontSelect[i]); \r\n        this.fontFamily = this.googlefontSelect[i].importName;\r\n        this.fontEmbed = this.googlefontSelect[i].importUrl;\r\n      }\r\n    }\r\n  }\r\n   \r\n  getStoriesService(){\r\n    this.storyservice.getAllStories().subscribe(\r\n      (response : Story[]) => {\r\n       \r\n        if(this.userLog.usernameLog == null){\r\n          this.route.navigateByUrl(\"/login\");  \r\n        }\r\n         console.log(response);\r\n          this.stories = response;\r\n      },\r\n      (error) => { \r\n        console.log(error);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getMyStoriesService(userid : any){\r\n    this.storyservice.getMyStories(userid).subscribe(\r\n      (response : Story[]) => {\r\n         //console.log(response);\r\n          this.myStories = response;\r\n      },\r\n      (error) => { \r\n        console.log(error);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  editMyStoryService(id : number){\r\n    //console.log(id); \r\n    \r\n    this.storyservice.editMyStory(id).subscribe(\r\n      (response : Story) => {\r\n         console.log(response); \r\n         this.editForm = response;\r\n      },\r\n      (error) => { \r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  viewHtml(event ){\r\n    \r\n      this.htmlView = this.story.MyStory;\r\n    \r\n    \r\n  }\r\n\r\n  postMyStory(){\r\n    //console.log(this.story);\r\n    this.storyservice.writeMyStory(this.story).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.story.Title = null;\r\n        this.story.MyStory = null;\r\n        this.story.GoogleFontsId = 0;\r\n        this.story.BackgroundColour = null;\r\n        this.htmlView = null;\r\n        this.showEditor = false;\r\n        this.loginError = \"\";\r\n        this.getMyStoriesService(this.userLog.useridLog);\r\n      },\r\n      (error) => { \r\n        console.log(error.error.error.Title.errors[0].errorMessage);\r\n        console.log(error.error.error);\r\n        var errorFinal = \"\";\r\n        this.errorArray = []; \r\n\r\n        if(error.error.error.Title.errors[0].errorMessage){ \r\n          this.errorArray.push(error.error.error.Title.errors[0].errorMessage);\r\n        }\r\n        if(error.error.error.MyStory.errors[0].errorMessage){ \r\n          this.errorArray.push(error.error.error.MyStory.errors[0].errorMessage);\r\n        }\r\n        /*  if(error.error.error.UserId.errors[0].errorMessage){ \r\n          this.errorArray.push(error.error.error.UserId.errors[0].errorMessage);\r\n        } */\r\n         \r\n        console.log(this.errorArray);\r\n        this.loginError = this.errorArray;\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  updateMyStory(){\r\n    console.log(this.editForm);\r\n    this.storyservice.updateThisStory(this.editForm).subscribe(\r\n      (response) => {\r\n        console.log(\"UPDATED\");\r\n        document.getElementById(\"closeModalButton\").click();\r\n        console.log(response);\r\n        this.getMyStoriesService(this.userLog.useridLog);\r\n      },\r\n      (error) => { \r\n        console.log(error.error.error.Title.errors[0].errorMessage);\r\n        console.log(error.error.error);\r\n        var errorFinal = \"\";\r\n        this.errorArray = []; \r\n\r\n        if(error.error.error.Title.errors[0].errorMessage){ \r\n          this.errorArray.push(error.error.error.Title.errors[0].errorMessage);\r\n        }\r\n        if(error.error.error.MyStory.errors[0].errorMessage){ \r\n          this.errorArray.push(error.error.error.MyStory.errors[0].errorMessage);\r\n        }\r\n       \r\n        console.log(this.errorArray);\r\n        this.loginError = this.errorArray;\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n <div class=\"container-fluid\" *ngIf=\"userLog.usernameLog\">\r\n     <div class=\"row\">\r\n         <div class=\"col-md-12 text-center\">\r\n            <span class=\"btn  margin-left  btn-dark btn-sm\"   (click)=\"toggleEditor()\">Create your beautiful story now <i [ngClass]=\"showEditor == true? 'fa-minus' : 'fa-plus' \" class=\"fa  \"></i> </span>\r\n         </div>\r\n     </div>\r\n </div>\r\n<div class=\"container-fluid margin-top\">\r\n    <div class=\"row\">\r\n        \r\n        <div class=\"col-md-2\" *ngIf=\"showEditor == false\">&nbsp;</div>\r\n        <div class=\"col-md-6\" *ngIf=\"showEditor == true\"> \r\n                <div class=\"padding background-transparent\" >\r\n                    \r\n                    <h4>Preview:   </h4>\r\n\r\n                    <svg style=\"display:none\">\r\n                        <style>\r\n                            @import url('{{fontEmbed}}');\r\n                        </style>\r\n                    </svg>\r\n                     \r\n                    <div class=\"googleFont\" style='{{fontFamily}} '>\r\n                        <h1>{{story.Title}}</h1>\r\n                        <div [innerHTML]=\"htmlView\"></div>\r\n                    </div>\r\n                   \r\n                   \r\n                </div>  \r\n        </div>\r\n        <div class=\"col-md-6\" *ngIf=\"showEditor == true\">\r\n            <div class=\"padding background-transparent\">\r\n\r\n                <div class=\"alert alert-danger\" *ngIf=\"loginError\">\r\n                            <span class=\"text-danger\"   *ngFor =\"let er of loginError\">{{er}} <br /></span>\r\n                </div>\r\n\r\n\r\n                <h3>I want to share my story!</h3>  \r\n                <form >\r\n                    <input type=\"hidden\" class=\"form-control\" id=\"InputUserId\" [(ngModel)]=\"story.UserId\" name=\"Id\"    > \r\n                    <div class=\"form-group\">\r\n                      <label for=\"InputTitle\">What is all about?</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"InputTitle\" [(ngModel)]=\"story.Title\" name=\"Title\"  placeholder=\"My wonderful school\"> \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"InputTitle\">And this is my story for today.</label>\r\n                        <!--<textarea [(ngModel)]=\"story.MyStory\" class=\"form-control\" (ngModelChange)=\"viewHtml($event)\" name=\"MyStory\"  rows=\"5\" ></textarea>-->\r\n\r\n                        <angular-editor  [(ngModel)]=\"story.MyStory\" (ngModelChange)=\"viewHtml($event)\" name=\"MyStory\"  ></angular-editor>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"InputTitle\">Font Style</label> \r\n                        <select [(ngModel)]=\"story.GoogleFontsId\" (change)=\"getFont(story.GoogleFontsId)\" name=\"GoogleFont\" class=\"form-control\" >\r\n                            <option [ngValue]=\"0\" selected>--Choose font--</option>\r\n                            <option  *ngFor =\"let gf of googlefontSelect\" [ngValue]=\"gf.id\" > {{gf.importName}}</option>\r\n                        </select>\r\n                      </div>\r\n                     \r\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"postMyStory($event)\">Submit</button>\r\n                  </form>\r\n            </div>\r\n        </div>\r\n       \r\n        <div   [ngClass]=\"showEditor == true? 'displaynone' : 'col-md-8' \"> \r\n            <p *ngIf=\"userLog.usernameLog\" ><input type=\"text\" [(ngModel)]=\"searchStory\" class=\"form-control searchform\" placeholder=\"Search my stories\"></p>\r\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>  \r\n            <div class=\"alert alert-light background-transparent-light nobroder\"  *ngFor=\"let story of myStories | filter:searchStory | paginate: { itemsPerPage: 20, currentPage: p }\" >\r\n                \r\n                <svg style=\"display:none\">\r\n                    <style>\r\n                        @import url('{{story.googleFont.importUrl}}');\r\n                    </style>\r\n                </svg>\r\n                <div class=\"thisgooglefont\" style='{{story.googleFont.importName}} ' >\r\n                    <span class=\"edit-my-story\"    (click)=\"editMyStoryService(story.id) \" data-toggle=\"modal\" data-target=\"#editStoryModal\"><i class=\"fa fa-edit\"></i></span>\r\n                    <h1 >{{story.title}}</h1>\r\n                    <div [innerHTML]=\"story.myStory\"></div>\r\n                </div>\r\n               \r\n                <p><small>Date Created: {{story.dateCreated | date:'medium'}} </small></p>\r\n            </div>\r\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>  \r\n\r\n        </div>\r\n        <div class=\"col-md-2\" *ngIf=\"showEditor == false\">&nbsp;</div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"editStoryModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editStoryModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"editStoryModalLabel\">Edit Story</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n\r\n             \r\n\r\n           <form  *ngIf=\"editForm\" >\r\n            <input type=\"hidden\" class=\"form-control\" id=\"InputUserId\" [(ngModel)]=\"editForm.id\"  name=\"Id\"    > \r\n            <div class=\"form-group\">\r\n              <label for=\"InputTitle\">Edit Title</label>\r\n              <input type=\"text\"  class=\"form-control\" id=\"InputTitle\" [(ngModel)]=\"editForm.title\"  name=\"Title\"   > \r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"InputTitle\">Edit Content</label>\r\n                 \r\n                <angular-editor  [(ngModel)]=\"editForm.myStory\"   name=\"MyStory\"  ></angular-editor>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"InputTitle\">Edit Font Style</label> \r\n                <select [(ngModel)]=\"editForm.googleFontsId\"  (change)=\"getFont(editForm.googleFontsId)\"   name=\"GoogleFont\" class=\"form-control\" >\r\n                    <option [ngValue]=\"0\" selected>--Choose font--</option>\r\n                    <option  *ngFor =\"let gf of googlefontSelect\" [ngValue]=\"gf.id\" > {{gf.importName}}</option>\r\n                </select>\r\n              </div>\r\n             \r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.title || !editForm.id || !editForm.myStory\" (click)=\"updateMyStory($event)\">Update</button>\r\n          </form>\r\n\r\n          \r\n          <!--<div class=\"margin-top\"  *ngIf=\"editForm\" >\r\n                <span class=\"cursorpoint btn btn-small btn-dark\" (click)=\"getFont(editForm.googleFontsId)\">Click for preview <i class=\"fa  fa-eye\"></i></span>\r\n                <hr />\r\n                <div class=\"margin-top\"  [hidden] = \"!fontFamily\">\r\n                    <h4 >Preview:   </h4>\r\n\r\n                    <svg style=\"display:none\">\r\n                        <style>\r\n                            @import url('{{fontEmbed}}');\r\n                        </style>\r\n                    </svg>\r\n                    \r\n                    <div class=\"googleFont\" style='{{fontFamily}} '>\r\n                        <h1>{{editForm.title}}</h1>\r\n                        <div [innerHTML]=\"htmlView\"></div>\r\n                    </div>\r\n                </div>\r\n               \r\n          </div>-->\r\n           \r\n \r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          \r\n            <button type=\"button\" id=\"closeModalButton\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { HomepageComponent } from './homepage/homepage.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { StoriesComponent } from './stories/stories.component';\r\nimport { CanActivateGuardService } from './can-activate-guard.service';\r\nimport { CanActivateLoginService } from './can-activate-login.service';\r\nimport { CanActivateRegisterService } from './can-activate-register.service';\r\nimport { CanActivateHomeService } from './can-activate-home.service';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", component : HomepageComponent  },\r\n  {path: \"register\", component : RegisterComponent  },\r\n  {path: \"login\", component : LoginComponent  },\r\n  {path: \"my-stories\", component : StoriesComponent, canActivate: [CanActivateGuardService]},\r\n  {path: \"about-us\", component : AboutUsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { User } from './../user';\r\n \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginViewModel } from '../login-view-model';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  login : LoginViewModel = new LoginViewModel();\r\n  thisMessage: any;\r\n  loginError: string = \"\";\r\n  errorArray: any = [];\r\n  userLog : User = new User();\r\n\r\n  constructor(private loginservice: LoginService, private router: Router ) {  \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.thisMessage = false;\r\n    \r\n    if(this.loginservice.checkLogin() != null){ \r\n      this.router.navigateByUrl(\"/my-stories\");\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  onLoginClick (event){ \r\n    return this.loginservice.Login(this.login).subscribe(\r\n      (response) => { \r\n        //this.router.navigateByUrl(\"/my-stories\");\r\n        window.location.reload();\r\n\r\n        console.log(response);  \r\n      },\r\n       (error) => {\r\n         console.log(error);\r\n\r\n        var errorFinal = \"\";\r\n        this.errorArray = [];\r\n        \r\n        if(error.error.error){\r\n          errorFinal += error.error.error;\r\n          this.errorArray.push(error.error.error);\r\n        }\r\n        if(error.error.UserName){\r\n          errorFinal += error.error.UserName;\r\n          this.errorArray.push(error.error.UserName);\r\n        }\r\n        if(error.error.Password){\r\n          errorFinal += error.error.Password;\r\n          this.errorArray.push(error.error.Password);\r\n        }\r\n        console.log(this.errorArray);\r\n        this.loginError = this.errorArray;\r\n      },\r\n    )\r\n  }\r\n\r\n   \r\n\r\n}\r\n","<div class=\"container\"> \r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">&nbsp;</div>\r\n            <div class=\"col-md-6\">\r\n\r\n                    <div class=\"alert alert-danger\" *ngIf=\"loginError\">\r\n                            <span class=\"text-danger\"   *ngFor =\"let er of loginError\">{{er}} <br /></span>\r\n                    </div>\r\n                    \r\n                    <form class=\"padding background-transparent\">\r\n                           \r\n                            <div class=\"form-group\">\r\n                              <label for=\"exampleInputEmail1\">Username</label>\r\n                              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"login.UserName\"  name=\"UserName\" > \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label for=\"exampleInputPassword1\">Password</label>\r\n                              <input type=\"password\" class=\"form-control\" [(ngModel)]=\"login.Password\"  name =\"Password\" >\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Submit</button>\r\n                        </form>\r\n    \r\n            </div>\r\n            <div class=\"col-md-3\">&nbsp;</div>\r\n        </div> \r\n    </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}